apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'

mainClassName = "org.folio.inventory.Launcher"
project.ext.artifactId = "mod-inventory"
version = "6.0.0-SNAPSHOT"

ext.sharedManifest = manifest {
  attributes(
    "Main-Class": mainClassName,
    "Implementation-Title": project.properties['artifactId'],
    "Implementation-Version": version)
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'io.vertx:vertx-core:3.3.2'
  compile 'org.codehaus.groovy:groovy-all:2.4.8'
  compile 'io.vertx:vertx-web:3.3.2'
  compile 'com.google.guava:guava:19.0'
  compile 'org.apache.commons:commons-lang3:3.5'
  compile 'org.apache.httpcomponents:httpclient-osgi:4.5.2'
  compile 'org.apache.commons:commons-io:1.3.2'

  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
  testCompile 'com.github.jsonld-java:jsonld-java:0.9.0'
  testCompile 'io.rest-assured:rest-assured:3.0.3'
}

defaultTasks 'build', 'generateDescriptors'

//Fix strange issue with joint compilation and test source set referencing main
sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs = [ "src/main/java", "src/main/groovy"]
sourceSets.test.groovy.srcDirs = ["src/test/groovy"]
sourceSets.test.java.srcDirs = ["src/test/java"]

test {
  //Gradle runs tests designed to be run in a suite twice
  //See: https://discuss.gradle.org/t/how-to-prevent-junit-test-suite-classes-from-being-ran-twice/7107/4
  exclude '**/External**Collection**Examples.class'
  exclude '**/api/**Examples.class'
}

task generateDescriptors(type: Copy) {
  from 'descriptors'
  into 'build'
  include('*Descriptor*-template.json')
  filteringCharset = 'UTF-8'
  expand(project.properties)
  rename { String fileName ->
    fileName.replace('-template', '')
  }
}

task testApiDirect(type: Test) {
  include '**/api/ApiTestSuite.class'
}

task testApiViaOkapi(type: Test) {
  include '**/api/ApiTestSuite.class'

  systemProperty 'use.okapi.initial.requests', 'true'
  systemProperty 'use.okapi.storage.requests', 'true'

  def okapiAddress = System.getProperty('okapi.address') ?: 'http://localhost:9130'

  systemProperty 'okapi.address', okapiAddress
}

task testStorageViaOkapi(type: Test) {
  include '**/api/ApiTestSuite.class'

  systemProperty 'use.okapi.initial.requests', 'false'
  systemProperty 'use.okapi.storage.requests', 'true'

  def okapiAddress = System.getProperty('okapi.address') ?: 'http://localhost:9130'

  systemProperty 'okapi.address', okapiAddress
}

jar {
  manifest = project.manifest {
    from sharedManifest
  }
}

task fatJar(type: Jar) {
  manifest = project.manifest {
    from sharedManifest
  }
  archiveName 'mod-inventory.jar'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.3'
}
